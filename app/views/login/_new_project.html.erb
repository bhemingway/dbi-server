<!-- START _new_project.html.erb -->

<% # figure out which step this is: 0=intro, 1=project leader, 2=project
   myaction = params[:action]
   step = myaction[/\d+$/]
   step = 0 if step.nil?
   key = 'newproject.subtitle' + step.to_s 
   step_string = nil

   # choose the correct sub-sub title for either of these steps
   if step.nil?
     step_string = 'Programming error: step is nil!'
   elsif step.to_i == 2 or step.to_i == 3
     if params.has_key?('f_usage_type')
       key += '.'
       key += params['f_usage_type']
     else
       step_string = 'Programming error: f_usage_type is nil!'
     end
   end

   step_string = t(key) if step_string.nil?
   next_step = (step.to_i + 1.to_i)
   url = '/newproject' + next_step.to_s

   # figure out the get string which will reproduce whatever the previous form needs
   prevs = Array.new
   params.each do |k, v|
     next unless (k[0,2] == 'f_')
     prevs.push("#{k}=#{v}")
   end
   argStr = prevs.join('&')
 %>

<h2>
<%= t('newproject.title')%>
</h2>
<h3>
<%= step_string %>
</h3>
<%=
   # need to pass in the "back" link to the next page, if any
   @back_url = ''
   if !step.to_i.zero?
     prev_step = 0
     url = '/newproject' 
     if step.to_i > 1
       prev_step = (step.to_i - 1.to_i) 
       url += prev_step.to_s
     end
     @back_url = url + '?' + argStr
   end

   # contents depends on which step this is
   case step.to_i
   when 0
     #simple_format t('newproject.intro')
     render 'new_project_0'
   when 1
     render 'new_project_1'
   when 2
     render 'new_project_2'
   when 3
     render 'new_project_3'
   when 4
     render 'new_project_4'
   when 5
     render 'new_project_5'
   end
 %>
<!-- END _new_project.html.erb -->
